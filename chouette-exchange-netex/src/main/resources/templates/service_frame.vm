<!-- ServiceFrame to map the PTNetwork  NEPTUNE Object -->
<ServiceFrame version="any"  id="${line.objectIdPrefix()}:ServiceFrame:${line.objectIdSuffix()}">
  <!-- NEPTUNE PTNetwork Mappling =========================================== -->
  <Network version="$network.objectVersion" id="${network.objectIdPrefix()}:PTNetwork:${network.objectIdSuffix()}"> <!-- >TODO : changed="$dateFormat.format( $network.versionDate )" -->											
    <Name>$network.name</Name>
    <Description>$network.description</Description>
    <PrivateCode>$network.registrationNumber</PrivateCode>
  </Network>
  <!-- NEPTUNE Route Mapping (part 1 : directions ) =========================================== -->
  <directions>
    #foreach( $route in $line.routes )   
    <Direction version="any" id="${route.objectIdPrefix()}:Route:${route.objectIdSuffix()}:Direction">
      <Name>$route.publishedName</Name>
      #if ($route.wayBack == "A")
      <DirectionType>outbound</DirectionType>
      #elseif( $route.wayBack == "R" )
      <DirectionType>inbound</DirectionType>
      #end
    </Direction>
    #end                  
  </directions>
  <!-- NEPTUNE StopPoint (RoutePoint)  mapping=========================================== -->
  <routePoints>
    #foreach( $route in $line.routes ) 
      #foreach( $stopPoint in $route.stopPoints )
      #set($routePointId = ${route.objectIdSuffix()} + 'A' + $stopPoint.position + 'A' + ${stopPoint.objectIdSuffix()} )
    <RoutePoint version="$stopPoint.objectVersion" id="${stopPoint.objectIdPrefix()}:RoutePoint:${routePointId}">
      <Name>$stopPoint.name</Name><!-- TODO : NEPTUNE [mapping:variable] : RoutePoint->Name mapped to NEPTUNE StopPoint->publishedName  -->
      <Location>
        <Longitude>$stopPoint.longitude</Longitude>
        <Latitude>$stopPoint.latitude</Latitude>
      </Location>
      <projections>
        <PointProjection version="any" id="${stopPoint.objectIdPrefix()}:PointProjection:${routePointId}">
          <ProjectedPointRef version="$stopPoint.containedInStopArea.objectVersion" ref="${stopPoint.objectIdPrefix()}:StopPoint:${stopPoint.objectIdSuffix()}"/>
        </PointProjection>
      </projections>
    </RoutePoint>
      #end
    #end
  </routePoints>
  <!-- NEPTUNE Route Mapping (part 2 : routes ) =========================================== -->
  <routes>
    #foreach( $route in $line.routes )   
    <Route version="$route.objectVersion" id="${route.objectIdPrefix()}:Route:${route.objectIdSuffix()}">
      <Name>$route.name</Name>
      <DirectionRef version="any" ref="${route.objectIdPrefix()}:Route:${route.objectIdSuffix()}:Direction"/>
      <pointsInSequence>                               
        #foreach( $stopPoint in $route.stopPoints )
        #set($routePointId = ${route.objectIdSuffix()} + 'A' + $stopPoint.position + 'A' + ${stopPoint.objectIdSuffix()} )
        #set($pointOnRouteId = ${stopPoint.objectIdSuffix()} + '-' + $stopPoint.position )
        <PointOnRoute version="any" id="${stopPoint.objectIdPrefix()}:PointOnRoute:${pointOnRouteId}" order="$stopPoint.position">
          <RoutePointRef version="$route.objectVersion" ref="${stopPoint.objectIdPrefix()}:RoutePoint:${routePointId}"/>
        </PointOnRoute>
        #end
      </pointsInSequence>
    </Route>
    #end
  </routes>
  <!-- NEPTUNE Line Mapping =========================================== -->
  <lines>
    <Line version="$line.objectVersion" id="${line.objectIdPrefix()}:Line:${line.objectIdSuffix()}">      
      <Name>$line.name</Name>
      <TransportMode>$line.transportModeName</TransportMode>
      <PublicCode>$line.registrationNumber</PublicCode>
      <routes>
        #foreach( $route in $line.routes )
        <RouteRef version="$route.objectVersion" ref="${route.objectIdPrefix()}:Route:${route.objectIdSuffix()}"/>
        #end
      </routes>
    </Line>
  </lines>
  !--   -->
  <!-- NEPTUNE Stop Area with "Quay" or "BoardingPosition" type  =========================================== -->
  <scheduledStopPoints>
    #foreach( $route in $line.routes )
      #foreach( $stopPoint in $route.stopPoints )
    <ScheduledStopPoint version="$stopPoint.objectVersion" id="${stopPoint.objectIdPrefix()}:StopPoint:${stopPoint.objectIdSuffix()}">
      <Name>$stopPoint.name</Name>
      <TimingPointStatus>timingPoint</TimingPointStatus>
    </ScheduledStopPoint>
      #end
    #end
  </scheduledStopPoints>
  <!--  SERVICE PATTERN : Service Links are not mapped (they are not mandatory in NeTeEx), the sequence of Scheduled Stop Point is used instead -->
  <servicePatterns>
    #foreach( $route in $line.routes )
      #foreach( $journeyPattern in $route.journeyPatterns )      
    <ServicePattern version="$journeyPattern.objectVersion" id="${journeyPattern.objectIdPrefix()}:ServicePattern:${journeyPattern.objectIdSuffix()}">
      <Name>$journeyPattern.name</Name>
      <!-- NEPTUNE [mapping:variable] : ServicePattern->RouteRef mapped to NEPTUNE JourneyPattern->routeId -->
      <RouteRef version="1" ref="${route.objectIdPrefix()}:Route:${route.objectIdSuffix()}"/>
      <pointsInSequence>
        #foreach( $stopPoint in $journeyPattern.stopPoints )
          #set($routePointId = ${route.objectIdSuffix()} + 'A' + $stopPoint.position + 'A' + ${stopPoint.objectIdSuffix()} )
        <StopPointInJourneyPattern version="1" id="${stopPoint.objectIdPrefix()}:StopPointInJourneyPattern:${stopPoint.objectIdSuffix()}">
          <ScheduledStopPointRef version="$stopPoint.objectVersion" ref="${stopPoint.objectIdPrefix()}:RoutePoint:${routePointId}"/>
        </StopPointInJourneyPattern>
        #end       
      </pointsInSequence>
    </ServicePattern>
      #end    
    #end
  </servicePatterns>
  <!--   -->
  <!-- Tarif zone  : Not really available in NEPTUNE, but there is a need to map Tariff Zone 1 (which is an attribute in NEPTUNE -->
  <!-- This object needs to be created inside the mapping mechanism -->
  <tariffZones>
    #foreach( $key in $tariffStopPoints ) 
    <TariffZone version="any" id="RATP_PIVI:TariffZone:$tariffStopPoint.keySet()">
      <Name>$key.name</Name>
      <members>
        #foreach($stopPoint in $tariffStopPoints.get($key) )
        #set($routePointId = ${stopPoint.getRoute().objectIdSuffix()} + 'A' + $stopPoint.position + 'A' + ${stopPoint.objectIdSuffix()} ) 
        <RoutePointRef version="1" ref="${stopPoint.objectIdPrefix()}:RoutePoint:${routePointId}"/>
        #end
      </members>
    </TariffZone>
    #end 
  </tariffZones>
  <!--   -->
  <!-- Assignments of Schedules Stop Points to Stop Places -->
  <stopAssignments>
  #foreach( $route in $line.routes )       
    #foreach( $stopPoint in $route.stopPoints )     
    <PassengerStopAssignment version="any" id="${stopPoint.objectIdPrefix()}:PassengerStopAssignment:${stopPoint.objectIdSuffix()}">
      <ScheduledStopPointRef version="1" ref="${stopPoint.objectIdPrefix()}:StopPoint:${stopPoint.objectIdSuffix()}"/>
      #if ($stopPoint.containedInStopArea) 
      <StopPlaceRef version="$stopPoint.containedInStopArea.parent.objectVersion" ref="${stopPoint.objectIdPrefix()}:StopArea:${stopPoint.containedInStopArea.parent.objectIdSuffix()}"/>
      #end 
      <QuayRef version="$stopPoint.containedInStopAreaId.objectVersion" ref="${stopPoint.objectIdPrefix()}:Quay:${stopPoint.containedInStopArea.objectIdSuffix()}"/>
    </PassengerStopAssignment>    
    #end
  #end  
  </stopAssignments>
</ServiceFrame>
